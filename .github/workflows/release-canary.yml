name: Release Canary

on:
  push:
    branches: [main]

jobs:
  Setup:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [14.19]

    steps:
      - uses: actions/checkout@v2

      - name: setup node v${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: use cached node_modules
        id: cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.node-version }}-yarn-

      - name: install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
        env:
          CI: true

  Lint:
    needs: [Setup]

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [14.19]

    steps:
      - uses: actions/checkout@v2

      - name: setup node v${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: use cached node_modules
        id: cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.node-version }}-yarn-

      - name: install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
        env:
          CI: true

      - name: code lint
        run: yarn lint
        env:
          CI: true

  Test:
    needs: [Setup]

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [14.19]

    steps:
      - uses: actions/checkout@v2

      - name: setup node v${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: use cached node_modules
        id: cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.node-version }}-yarn-

      - name: install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
        env:
          CI: true

      - name: unit tests
        run: yarn test
        env:
          CI: true

  Publish:
    needs: [Setup, Lint, Test]

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [14.19]

    steps:
      - uses: actions/checkout@v2
      - run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: setup node v${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.com'

      - name: use cached node_modules
        id: cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.node-version }}-yarn-

      - name: install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
        env:
          CI: true

      - name: Resolve version
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: 'Version based on commit: 0.0.0-${{ steps.vars.outputs.sha_short }}'
        run: npm version 0.0.0-${{ steps.vars.outputs.sha_short }}

      - name: Publish
        run: npm publish --tag canary
        env:
          CI: true
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
