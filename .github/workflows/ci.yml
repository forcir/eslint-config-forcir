name: CI

on: push

jobs:
  Setup:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
        node: [14]
    steps:
      - name: setup node v${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: checkout repository
        uses: actions/checkout@v2

      - name: fetch main branch from origin
        run: git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: node_modules cache
        uses: actions/cache@v2
        id: workspace-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.node }}-yarn-

      - name: install dependancies
        run: yarn install --frozen-lockfile

  Format:
    needs: [Setup]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
        node: [14]
    steps:
      - name: setup node v${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 3

      - name: fetch main branch from origin
        run: git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: node_modules cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.node }}-yarn-

      - name: run code format check
        run: yarn format

  Lint:
    needs: [Setup]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
        node: [14]
    steps:
      - name: setup node v${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 3

      - name: fetch main branch from origin
        run: git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: node_modules cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.node }}-yarn-

      - name: run code lint check
        run: yarn lint

  Test:
    needs: [Setup]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
        node: [14]
    steps:
      - name: setup node v${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 3

      - name: fetch main branch from origin
        run: git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: node_modules cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.node }}-yarn-

      - name: run unit test check
        run: yarn test

  Build:
    needs: [Setup, Format, Lint, Test]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
        node: [14]
    steps:
      - name: setup node v${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 3

      - name: fetch main branch from origin
        run: git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: node_modules cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.node }}-yarn-

      - name: build project
        run: yarn build
