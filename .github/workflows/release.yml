name: Release

on:
  release:
    types: [published]

jobs:
  Setup:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [14.19]

    steps:
      - uses: actions/checkout@v2

      - name: setup node v${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: use cached node_modules
        id: cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.node-version }}-yarn-

      - name: install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
        env:
          CI: true

  Format:
    needs: [Setup]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
        node: [14]
    steps:
      - name: setup node v${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 3

      - name: fetch main branch from origin
        run: git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: node_modules cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.node }}-yarn-

      - name: run code format check
        run: yarn format

  Lint:
    needs: [Setup]

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [14.19]

    steps:
      - uses: actions/checkout@v2

      - name: setup node v${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: use cached node_modules
        id: cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.node-version }}-yarn-

      - name: install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
        env:
          CI: true

      - name: code lint
        run: yarn lint
        env:
          CI: true

  Test:
    needs: [Setup]

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [14.19]

    steps:
      - uses: actions/checkout@v2

      - name: setup node v${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: use cached node_modules
        id: cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.node-version }}-yarn-

      - name: install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
        env:
          CI: true

      - name: unit tests
        run: yarn test
        env:
          CI: true

  Build:
    needs: [Setup, Lint, Test]

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [14.19]

    steps:
      - uses: actions/checkout@v2

      - name: setup node v${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: use cached node_modules
        id: cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.node-version }}-yarn-

      - name: install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
        env:
          CI: true

      - name: build project
        run: yarn build

  Publish:
    needs: [Build]

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [14.19]

    steps:
      - uses: actions/checkout@v2
      - run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: setup node v${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'

      - name: use cached node_modules
        id: cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.node-version }}-yarn-

      - name: install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
        env:
          CI: true

      - name: build project
        run: yarn build

      - name: publish to npm
        run: npm publish
        env:
          CI: true
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
